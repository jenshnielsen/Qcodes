name: "QCoDeS CI"

trigger:
  branches:
    include:
      - master

jobs:
  - job: "run_the_tests"
    pool:
      vmImage: "win1803"

    steps:
      - powershell: |
          docker version
          docker run -d --isolation=hyperv gsxsolutions/rmq-nano:3.7.7

      - powershell: |
          # Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
          $miniconda_url = "https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe"
          $miniconda_exe = "$env:TEMP\miniconda.exe"
          $conda_install_bat = "$env:TEMP\conda_install.bat"
          $miniconda_install_path = "$HOME\miniconda\"

          # install miniconda and update
          Write-Host 'downloading miniconda, please wait'
          (New-Object System.Net.WebClient).DownloadFile($miniconda_url, $miniconda_exe)| Out-Host
          Write-Host 'installing miniconda'
          &$miniconda_exe /InstallationType=JustMe /AddToPath=1 /S "/D=$miniconda_install_path" | Out-Host
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          Write-Host 'updating miniconda'
          conda update -y conda
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          Write-Host "##vso[task.prependpath]$HOME\miniconda"
      # Conda Environment
      # Create and activate a Conda environment.
      - task: CondaEnvironment@1
        inputs:
          createCustomEnvironment: true
          environmentName: qcodes
          packageSpecs: 'python=3.6'
          updateConda: true
      - script: |
          conda env update -n qcodes -f environment.yml
          pip install -r test_requirements.txt
          pip install -r docs_requirements.txt
          pip install -e .
        displayName: "Installation"
      - script: |
          mypy qcodes
        displayName: "mypy"
      - script: |
          cd qcodes
          python tests\dataset\legacy_DB_generation\generate_version_0.py
          python tests\dataset\legacy_DB_generation\generate_version_1.py
          python tests\dataset\legacy_DB_generation\generate_version_2.py
          python tests\dataset\legacy_DB_generation\generate_version_3.py
        displayName: "Generate db fixtures"
      - script: |
          cd qcodes
          pytest --junitxml=test-results.xml --cov=qcodes --cov-report=xml --cov-report=html --cov-config=.coveragerc
        displayName: "Pytest"
      - script: |
          cd docs
          REM Turn warnings into errors
          set SPHINXOPTS=-W -v
          make.bat htmlapi
        displayName: "docsbuild"
      - task: PublishTestResults@1
        inputs:
          testResultsFiles: 'qcodes\test-*.xml'
          testRunTitle: 'Publish test results'
